#include "../includes/headers.hpp"

int HASH_TABLE[256] =
{
  0,
  -227835133,
  -516198153,
  324072436,
  -946170081,
  904991772,
  648144872,
  -724933397,
  -1965467441,
  2024987596,
  1809983544,
  -1719030981,
  1296289744,
  -1087877933,
  -1401372889,
  1578318884,
  274646895,
  -499825556,
  -244992104,
  51262619,
  -675000208,
  632279923,
  922689671,
  -996891772,
  -1702387808,
  1760304291,
  2075979607,
  -1982370732,
  1562183871,
  -1351185476,
  -1138329528,
  1313733451,
  549293790,
  -757723683,
  -1048117719,
  871202090,
  -416867903,
  357341890,
  102525238,
  -193467851,
  -1436232175,
  1477399826,
  1264559846,
  -1187764763,
  1845379342,
  -1617575411,
  -1933233671,
  2125378298,
  820201905,
  -1031222606,
  -774358714,
  598981189,
  -143008082,
  85089709,
  373468761,
  -467063462,
  -1170599554,
  1213305469,
  1526817161,
  -1452612982,
  2107672161,
  -1882520222,
  -1667500394,
  1861252501,
  1098587580,
  -1290756417,
  -1606390453,
  1378610760,
  -2032039261,
  1955203488,
  1742404180,
  -1783531177,
  -878557837,
  969524848,
  714683780,
  -655182201,
  205050476,
  -28094097,
  -318528869,
  526918040,
  1361435347,
  -1555146288,
  -1340167644,
  1114974503,
  -1765847604,
  1691668175,
  2005155131,
  -2047885768,
  -604208612,
  697762079,
  986182379,
  -928222744,
  476452099,
  -301099520,
  -44210700,
  255256311,
  1640403810,
  -1817374623,
  -2130844779,
  1922457750,
  -1503918979,
  1412925310,
  1197962378,
  -1257441399,
  -350237779,
  427051182,
  170179418,
  -129025959,
  746937522,
  -554770511,
  -843174843,
  1070968646,
  1905808397,
  -2081171698,
  -1868356358,
  1657317369,
  -1241332974,
  1147748369,
  1463399397,
  -1521340186,
  -79622974,
  153784257,
  444234805,
  -401473738,
  1021025245,
  -827320098,
  -572462294,
  797665321,
  -2097792136,
  1889384571,
  1674398607,
  -1851340660,
  1164749927,
  -1224265884,
  -1537745776,
  1446797203,
  137323447,
  -96149324,
  -384560320,
  461344835,
  -810158936,
  1037989803,
  781091935,
  -588970148,
  -1834419177,
  1623424788,
  1939049696,
  -2114449437,
  1429367560,
  -1487280117,
  -1274471425,
  1180866812,
  410100952,
  -367384613,
  -112536529,
  186734380,
  -538233913,
  763408580,
  1053836080,
  -860110797,
  -1572096602,
  1344288421,
  1131464017,
  -1323612590,
  1708204729,
  -1749376582,
  -2065018290,
  1988219213,
  680717673,
  -621187478,
  -911630946,
  1002577565,
  -284657034,
  493091189,
  238226049,
  -61306494,
  -1307217207,
  1082061258,
  1395524158,
  -1589280451,
  1972364758,
  -2015074603,
  -1800104671,
  1725896226,
  952904198,
  -894981883,
  -638100751,
  731699698,
  -11092711,
  222117402,
  510512622,
  -335130899,
  -1014159676,
  837199303,
  582374963,
  -790768336,
  68661723,
  -159632680,
  -450051796,
  390545967,
  1230274059,
  -1153434360,
  -1469116676,
  1510247935,
  -1899042540,
  2091215383,
  1878366691,
  -1650582816,
  -741088853,
  565732008,
  854102364,
  -1065151905,
  340358836,
  -433916489,
  -177076669,
  119113024,
  1493875044,
  -1419691417,
  -1204696685,
  1247431312,
  -1634718085,
  1828433272,
  2141937292,
  -1916740209,
  -483350502,
  291187481,
  34330861,
  -262120466,
  615137029,
  -691946490,
  -980332558,
  939183345,
  1776939221,
  -1685949482,
  -1999470558,
  2058945313,
  -1368168502,
  1545135305,
  1330124605,
  -1121741762,
  -210866315,
  17165430,
  307568514,
  -532767615,
  888469610,
  -962626711,
  -707819363,
  665062302,
  2042050490,
  -1948470087,
  -1735637171,
  1793573966,
  -1104306011,
  1279665062,
  1595330642,
  -1384295599
};

unsigned char matreshkaSecret[58] = {0x72, 0xd6, 0x47, 0xf9, 0x6a, 0x6e, 0xae, 0x33, 0x2e, 0x06, 0x22, 0x1d, 0x48, 0xf5, 0x77, 0xcc, 0x4c, 0xc9, 0x50, 0xa6, 0x6f, 0xd2, 0x2d, 0x28, 0x7d, 0x40, 0x94, 0x7e, 0xf3, 0x60, 0x96, 0x30, 0x71, 0x98, 0x1e, 0xda, 0xa3, 0xd7, 0xa8, 0x11, 0x20, 0x58, 0xd6, 0x4b, 0xf9, 0x24, 0xa6, 0xf5, 0x52, 0xbd, 0x2a, 0x95, 0x06, 0xa7, 0x11, 0x12, 0x66, 0x43};

unsigned int matreshkaPingEncryption(unsigned char* data, unsigned int length, unsigned int inputKey)
{
    for ( unsigned short i = 0; i < length; ++i )
        inputKey = HASH_TABLE[data[i] ^ (unsigned char)inputKey] ^ (inputKey >> 8);

    return inputKey;
}

std::string address = {0};
char RECEIVE_BUFFER[400] = {0};

int main(int, char**)
{
    printf("Write IP: ");
    getline(std::cin, address);

    SOCKET SOCKET_ = Request::createSocketConnection(address, 7777, 1000);
    sockaddr_in SOCK = Request::returnSocketAddr(address, 7777);
    struct sockaddr_in from = {0};

    std::string send_header("MCRH3110");
    sendto(SOCKET_, (char*)send_header.c_str(), 400, 0, (sockaddr*)&SOCK, sizeof(sockaddr_in));

    int fromlen = sizeof(from);
    from.sin_family = AF_INET;

    while (1)
    {
        if (SOCKET_ != INVALID_SOCKET)
        {
            int length = recvfrom(SOCKET_, RECEIVE_BUFFER, sizeof(RECEIVE_BUFFER), 0, (sockaddr*)&from, &fromlen);

            if (length != -1)
            {
                if (length == 8)
                {
                    unsigned char SEND_DATE[400] = {0};

                    memcpy(&SEND_DATE, &RECEIVE_BUFFER[4], 4);
                    memcpy(&SEND_DATE[4], matreshkaSecret, 58);

                    unsigned int firstKey = matreshkaPingEncryption((unsigned char*)SEND_DATE, 62, 0);
                    unsigned int secondKey = matreshkaPingEncryption((unsigned char*)SEND_DATE, 4, firstKey);

                    memset(SEND_DATE, 0, 400);

                    SEND_DATE[0] = 0x4D;
                    SEND_DATE[1] = 0x43;
                    SEND_DATE[2] = 0x52;
                    SEND_DATE[3] = 0x52;

                    SEND_DATE[4] = RECEIVE_BUFFER[4];
                    SEND_DATE[5] = RECEIVE_BUFFER[5];
                    SEND_DATE[6] = RECEIVE_BUFFER[6];
                    SEND_DATE[7] = RECEIVE_BUFFER[7];

                    *(unsigned int *)&SEND_DATE[8] = firstKey;
                    *(unsigned int *)&SEND_DATE[12] = secondKey;
                    
                    printf("\n\nSend answer..\n\n");

                    sendto(SOCKET_, (char*)SEND_DATE, 400, 0, (sockaddr*)&SOCK, sizeof(sockaddr_in));
                    
                    return 1;
                }

                length = -1;
            }
        }
        Sleep(30);
    }

    return 1;
}
